DEADLINE: 11:00 AM Today

1. Problem Statement:
--------------------
Consider there are 6 items to be used to fill up the knapsack of maximum weight capacity of 10 unit.
Each item is represented here as (weight, benefit):
(4, 6), (2,4), (3,5), (1,3), (8,9), (4,7)

Using 0-1 Knapsack algorithm, find out what the maximum benefit will be and output it. Also, output the items consisting which the maximum benefit is found.

Format your output so that it is understandable. For example, for an imaginary data, your output may look like this:
Maximum benefit = 100
Selected items = (8,76), (9,24)

Submission instructions:
------------------------

Write a C/ C++/ Java program to solve the above-mentioned problems.

Your solution should be in one file. Rename the file with your AIUB student ID. For example, if your student ID is 11-18421-1, for a c++ file, the name of the file with extension should be 11-18421-1.cpp. Upload that file in the following path in the student portal:

Courses & Results => Algorithms => Final Term => Lab Perofrmance => Performance-1 => Upload

This text file is also uploaded in MS TEAMS under the 'Files' tab as well as in the above path of your student portal along with a c++ template code (template_0-1_knapsack.cpp) to guide you in your solution.

If you have any question, text me or the TAs directly in TEAMS. You are not allowed to use mic during a lab performance.